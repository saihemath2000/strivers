public static int maximalAreaOfSubMatrixOfAll1(int[][] mat, int n, int m) {
		// Write your code here.
		int ans=0;
		int heights[] = new int[m];
		for(int i=0;i<n;i++){
			for(int j=0;j<m;j++){
				if(mat[i][j]==1) heights[j]++;
				else heights[j]=0;
			}
			int area= find(heights);
			ans= Math.max(ans,area);
		}
		return ans;
}
public static int find(int hist[]){
		Stack<Integer> s= new Stack<>();
		int maxrect=0;
		for(int i=0;i<=hist.length;i++){
           while(!s.isEmpty() && (i==hist.length||hist[s.peek()]>=hist[i])){
			   int h= hist[s.pop()];
			   int w= (s.isEmpty())?i:(i-s.peek()-1);
			   maxrect= Math.max(maxrect,h*w);
		   }
		   s.push(i);
		}
		return maxrect;
}
