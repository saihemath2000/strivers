class Solution {
    public int strStr(String haystack, String needle) {
        int lps[]= LPS(needle);
        int i=0,j=0,n=haystack.length(),m=needle.length();
        while(i<n){
            if(haystack.charAt(i)==needle.charAt(j)){
                i++;
                j++;
            }
            if(j==m) return i-j;
            else if(i<n && haystack.charAt(i)!=needle.charAt(j)){
                if(j==0) i++;
                else j=lps[j-1];
            }
        }
        return -1;
    }
    static int[] LPS(String pattern){
        int n=pattern.length(),len=0,i=1;
        int arr[]= new int[n];
        arr[0]=0;
        while(i<n){
            if(pattern.charAt(len)==pattern.charAt(i)){
                len++;
                arr[i]=len;
                i++;
            }
            else{
                if(len==0) arr[i++]=len;
                else{
                    len=arr[len-1];
                }
            }
        }
        return arr;  
    }
}
