public static String getAlienLanguage(String []dictionary, int k) {
        // Write your code here.
        int n= dictionary.length;
        ArrayList<ArrayList<Integer>> adj= new ArrayList<>();
        for(int i=0;i<k;i++) adj.add(new ArrayList<>());
        for(int i=0;i<n-1;i++){
            String s1= dictionary[i];
            String s2= dictionary[i+1];
            int m= Math.min(s1.length(),s2.length());
            for(int j=0;j<m;j++){
                   if(s1.charAt(j)!=s2.charAt(j)){
                       adj.get(s1.charAt(j)-'a').add(s2.charAt(j)-'a');
                       break;
                   }
            }
        }
        ArrayList<Integer> topo= toposort(adj,k);
        String ans="";
        for(int i=0;i<topo.size();i++){
            ans+=(char)(topo.get(i)+(int)('a'));
        }
        return ans;
    }
    static ArrayList<Integer> toposort(ArrayList<ArrayList<Integer>> adj,int k){
        Stack<Integer> st= new Stack<>();
        ArrayList<Integer> sol= new ArrayList<>();
        boolean visited[]= new boolean[k];
        for(int i=0;i<k;i++){
            if(visited[i]==false)
                dfs(visited,adj,st,i);
        }
        while(!st.isEmpty())
           sol.add(st.pop());
        return sol;   
    }
    static void dfs(boolean visited[],ArrayList<ArrayList<Integer>> adj,Stack<Integer> st,int s){
        visited[s]=true;
        for(int it:adj.get(s)){
            if(visited[it]==false)
               dfs(visited,adj,st,it);
        }
        st.push(s);
    }
