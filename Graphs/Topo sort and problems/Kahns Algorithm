public static List<Integer> topologicalSort(int[][] edges, int e, int v) {
        // Write your code here!
        ArrayList<ArrayList<Integer>> adj= new ArrayList<>();
        ArrayList<Integer> ans= new ArrayList<>();
        for(int i=0;i<v;i++)
          adj.add(new ArrayList<Integer>());
        for(int i=0;i<edges.length;i++){
            adj.get(edges[i][0]).add(edges[i][1]);
        }
        int indegree[]= new int[v];
        for(int i=0;i<v;i++){
            for(int it:adj.get(i)){
                indegree[it]++;
            }
        }
        Queue<Integer> q= new ArrayDeque<>();
        for(int i=0;i<v;i++){
            if(indegree[i]==0)
              q.add(i);
        }
        while(!q.isEmpty()){
            int curr=q.poll();
            ans.add(curr);
            for(int it:adj.get(curr)){
                indegree[it]--;
                if(indegree[it]==0){
                   q.add(it); 
                }
            }
        }
        return ans;  
    }
