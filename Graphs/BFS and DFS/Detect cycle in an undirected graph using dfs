boolean detectCycle(int V, List<List<Integer>> adj) {
            // Write your code here.
            boolean visited[]= new boolean[V];
            for(int i=0;i<V;i++){
                if(visited[i]==false){
                   if(dfs(i,V,adj,visited,-1))
                      return true; 
                }
            }
            return false;
  }
  static boolean dfs(int s,int V,List<List<Integer>> adj,boolean visited[],int parent){
            visited[s]=true;
            for(int v:adj.get(s)){
                if(visited[v]==false){
                    if(dfs(v,V,adj,visited,s))
                      return true;  
                }
                else if(v!=parent)
                  return true;
            }
            return false;
    }
