public static boolean isGraphBirpatite(ArrayList<ArrayList<Integer>> edges) {
        // Write your code here
        int v= edges.get(0).size();
        int color[]= new int[v];
        Arrays.fill(color,-1);
        ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
        for (int i = 0; i < edges.size(); i++){
            adj.add(new ArrayList<>());
        }
        for (int i = 0; i <edges.size(); i++){
            for (int j = 0; j < edges.get(i).size(); j++){
                if(edges.get(i).get(j) == 1) adj.get(i).add(j);
            }
        }
        for(int i=0;i<v;i++){
            if(color[i]==-1){
              if(dfs(i,0,color,adj)==false)
                return false;
            }
        }
        return true;
    }
    public static boolean dfs(int node,int col,int color[],ArrayList<ArrayList<Integer>> edges){
        color[node]=col;
        for(int it:edges.get(node)){
            if(color[it]==-1){
              if(dfs(it,1-col,color,edges)==false)
                return false;
            }
            else if(color[it]==col)
              return false;
        }
        return true; 
    }
