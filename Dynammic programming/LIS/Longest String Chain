public static int longestStrChain(String[] arr) {
        Arrays.sort(arr,(a,b)->a.length()-b.length());
        int dp[] = new int[arr.length];  
        for(int i=0;i<arr.length;i++) 
            dp[i]=1;
        int max=0;

        for(int i=0;i<arr.length;i++){   
            for(int j=0;j<i;j++){
                if(compare(arr[i],arr[j])){
                    dp[i]=Math.max(dp[i],dp[j]+1);
                }
            }
            max=Math.max(max,dp[i]);
        }
        return max;
    }
    public static boolean compare(String str1 , String str2){   
            if(Math.abs(str1.length()-str2.length())!=1) 
               return false;
            if(str1.length()>str2.length()){
             int i=0;
             int j=0;
             while(i<str1.length() && j<str2.length()){
                if(str1.charAt(i)==str2.charAt(j)){
                    i++;
                    j++;
                }
                else{
                    i++;
                }
             }
            
              if((i==str1.length() && j==str2.length()) || (i+1 == str1.length() && j== str2.length())){ 
                return true;
              }
            }
             return false;    
    }
