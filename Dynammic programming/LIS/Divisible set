public static List< Integer > divisibleSet(int []arr) {
        // Write your code here.
        List<Integer> ans= new ArrayList<>();
        Arrays.sort(arr);
        int n= arr.length;
        int dp[]= new int[n];
        int hash[]= new int[n];
        Arrays.fill(dp,1);
        for(int i=0;i<n;i++){
            hash[i]=i;
            for(int prev=0;prev<i;prev++){
               if(arr[i]%arr[prev]==0 && (1+dp[prev]>dp[i])){
                  dp[i]=1+dp[prev];
                  hash[i]=prev;
               }
            }
        }
        int res=-1,index=0;
        for(int i=0;i<n;i++){
            if(dp[i]>res){
                res=dp[i];
                index=i;
            }
        }
        ans.add(arr[index]);
        while(hash[index]!=index){
            index=hash[index];
            ans.add(arr[index]);
        }
        return ans;
    }
