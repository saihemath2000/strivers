// for any string keep the longest palindrome subsequence part as static and add other chars front and back to make it palindrome
// for string "codingninjas" ----> keep "ingni" part as it is and add "cod" at back as "doc" and "njas" as "sajn" at front---> "codsajningninjasdoc"
// that means ---> totallength-len(LCS)

public static int minInsertion(String str) {
    int m= str.length();
		StringBuilder sb = new StringBuilder();
		sb.append(str);
		sb.reverse();
		String s1= sb.toString();
		int dp[][]= new int[m+1][m+1];
		for(int i=1;i<=m;i++){
			for(int j=1;j<=m;j++){
				if(str.charAt(i-1)==s1.charAt(j-1))
				  dp[i][j]= 1+dp[i-1][j-1];
				else{
				  dp[i][j]=  Math.max(dp[i-1][j],dp[i][j-1]);
				}  
			}
		}
		return m-dp[m][m];
 }
